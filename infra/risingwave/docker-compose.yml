
services:
  risingwave:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: risingwave
    hostname: risingwave
    ports:
      - "4566:4566"
      - "5690:5690"
      - "5691:5691"
      - "1250:1250"
    # volumes:
    #   - 
    networks:
      - infra_default

  risingwave-console:
    image: risingwavelabs/risingwave-console:v0.4.5-pgbundle
    container_name:   risingwave-console
    hostname: risingwave-console
    ports:
      - "8020:8020" # Or your RCONSOLE_PORT
    volumes:
      - risingwave-console-data:/var/lib/postgresql
    networks:
      - infra_default  

#   risingwave-console:
#     image: risingwavelabs/risingwave-console:v0.4.5 # Use the image without -pgbundle
#     ports:
#       - "8020:8020" # Or your RCONSOLE_PORT
#     environment:
#       RCONSOLE_PORT: 8020 # Optional, if different from default
#       RCONSOLE_PG_DSN: postgres://root:postgres@db:5432/risingwave_console_metadata_db # IMPORTANT: Point to your PG
#       RCONSOLE_ROOT_PASSWORD: root
#       # RCONSOLE_RISECTLDIR: /path/if/needed
#     depends_on:
#       - db # Only if PostgreSQL is also managed by this Docker Compose file
#     networks:
#       - infra_default

#   # Example: If running PostgreSQL in Docker Compose as well
#   db:
#     image: "postgres:15" 
#     ports:
#       - "5432:5432" # Expose if needed externally, otherwise RisingWave Console connects via Docker network
#     environment:
#       POSTGRES_USER: root
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: risingwave_console_metadata_db
#     volumes:
#       - postgres_risingwave_console_data:/var/lib/postgresql/data
#     networks:
#       - infra_default

volumes:
  risingwave-console-data: 


networks:
  infra_default:
    external: true